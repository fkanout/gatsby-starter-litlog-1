webpackJsonp([0xc37dc050efc4],{394:function(s,n){s.exports={data:{markdownRemark:{html:'<p>following <a href="https://www.gatsbyjs.org/tutorial/part-seven/">part-seven</a> of the [Gatsby.js Tutorial, except using <em>litlog-page.js</em> instead of <em>blog-post.js</em></p>\n<div class="gatsby-highlight" data-language="diff">\n      <pre class="language-diff"><code class="language-diff"><span class="token coord">@@ -4,4 +4,48 @@</span>\n  * See: https://www.gatsbyjs.org/docs/node-apis/\n  */\n \n<span class="token deleted">- // You can delete this file if you\'re not using it</span>\n\\ No newline at end of file\n<span class="token inserted">+const path = require(`path`);</span>\n<span class="token inserted">+const { createFilePath } = require(`gatsby-source-filesystem`);</span>\n<span class="token inserted">+</span>\n<span class="token inserted">+exports.onCreateNode = ({ node, getNode, boundActionCreators }) => {</span>\n<span class="token inserted">+  const { createNodeField } = boundActionCreators</span>\n<span class="token inserted">+  if (node.internal.type === `MarkdownRemark`) {</span>\n<span class="token inserted">+    const slug = createFilePath({ node, getNode, basePath: `pages` })</span>\n<span class="token inserted">+    createNodeField({</span>\n<span class="token inserted">+      node,</span>\n<span class="token inserted">+      name: `slug`,</span>\n<span class="token inserted">+      value: `${slug}`,</span>\n<span class="token inserted">+    })</span>\n<span class="token inserted">+  }</span>\n<span class="token inserted">+};</span>\n<span class="token inserted">+</span>\n<span class="token inserted">+exports.createPages = ({ graphql, boundActionCreators }) => {</span>\n<span class="token inserted">+  const { createPage } = boundActionCreators</span>\n<span class="token inserted">+  return new Promise((resolve, reject) => {</span>\n<span class="token inserted">+    graphql(`</span>\n<span class="token inserted">+      {</span>\n<span class="token inserted">+        allMarkdownRemark {</span>\n<span class="token inserted">+          edges {</span>\n<span class="token inserted">+            node {</span>\n<span class="token inserted">+              fields {</span>\n<span class="token inserted">+                slug</span>\n<span class="token inserted">+              }</span>\n<span class="token inserted">+            }</span>\n<span class="token inserted">+          }</span>\n<span class="token inserted">+        }</span>\n<span class="token inserted">+      }</span>\n<span class="token inserted">+    `).then(result => {</span>\n<span class="token inserted">+      result.data.allMarkdownRemark.edges.forEach(({ node }) => {</span>\n<span class="token inserted">+        createPage({</span>\n<span class="token inserted">+          path: node.fields.slug,</span>\n<span class="token inserted">+          component: path.resolve(`./src/templates/litlog-page.js`),</span>\n<span class="token inserted">+          context: {</span>\n<span class="token inserted">+            // Data passed to context is available in page queries as GraphQL variables.</span>\n<span class="token inserted">+            slug: node.fields.slug,</span>\n<span class="token inserted">+          },</span>\n<span class="token inserted">+        })</span>\n<span class="token inserted">+      })</span>\n<span class="token inserted">+      resolve()</span>\n<span class="token inserted">+    })</span>\n<span class="token inserted">+  })</span>\n<span class="token inserted">+};</span></code></pre>\n      </div>',frontmatter:{title:"Update"}}},pathContext:{slug:"/sites/site-1/changes/files/gatsby-node.js.file/2018-06-26T1127/"}}}});
//# sourceMappingURL=path---sites-site-1-changes-files-gatsby-node-js-file-2018-06-26-t-1127-9ead2e7d3ed3cc4ff6b2.js.map