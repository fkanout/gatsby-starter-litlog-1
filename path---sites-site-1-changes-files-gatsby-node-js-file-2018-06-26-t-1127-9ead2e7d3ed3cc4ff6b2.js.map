{"version":3,"sources":["webpack:///path---sites-site-1-changes-files-gatsby-node-js-file-2018-06-26-t-1127-9ead2e7d3ed3cc4ff6b2.js","webpack:///./.cache/json/sites-site-1-changes-files-gatsby-node-js-file-2018-06-26-t-1127.json"],"names":["webpackJsonp","408","module","exports","data","markdownRemark","html","frontmatter","title","pathContext","slug"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,s4GAAg9GC,aAAmDC,MAAA,YAAmBC,aAAgBC,KAAA","file":"path---sites-site-1-changes-files-gatsby-node-js-file-2018-06-26-t-1127-9ead2e7d3ed3cc4ff6b2.js","sourcesContent":["webpackJsonp([214944864858052],{\n\n/***/ 408:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>following <a href=\\\"https://www.gatsbyjs.org/tutorial/part-seven/\\\">part-seven</a> of the [Gatsby.js Tutorial, except using <em>litlog-page.js</em> instead of <em>blog-post.js</em></p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"diff\\\">\\n      <pre class=\\\"language-diff\\\"><code class=\\\"language-diff\\\"><span class=\\\"token coord\\\">@@ -4,4 +4,48 @@</span>\\n  * See: https://www.gatsbyjs.org/docs/node-apis/\\n  */\\n \\n<span class=\\\"token deleted\\\">- // You can delete this file if you're not using it</span>\\n\\\\ No newline at end of file\\n<span class=\\\"token inserted\\\">+const path = require(`path`);</span>\\n<span class=\\\"token inserted\\\">+const { createFilePath } = require(`gatsby-source-filesystem`);</span>\\n<span class=\\\"token inserted\\\">+</span>\\n<span class=\\\"token inserted\\\">+exports.onCreateNode = ({ node, getNode, boundActionCreators }) => {</span>\\n<span class=\\\"token inserted\\\">+  const { createNodeField } = boundActionCreators</span>\\n<span class=\\\"token inserted\\\">+  if (node.internal.type === `MarkdownRemark`) {</span>\\n<span class=\\\"token inserted\\\">+    const slug = createFilePath({ node, getNode, basePath: `pages` })</span>\\n<span class=\\\"token inserted\\\">+    createNodeField({</span>\\n<span class=\\\"token inserted\\\">+      node,</span>\\n<span class=\\\"token inserted\\\">+      name: `slug`,</span>\\n<span class=\\\"token inserted\\\">+      value: `${slug}`,</span>\\n<span class=\\\"token inserted\\\">+    })</span>\\n<span class=\\\"token inserted\\\">+  }</span>\\n<span class=\\\"token inserted\\\">+};</span>\\n<span class=\\\"token inserted\\\">+</span>\\n<span class=\\\"token inserted\\\">+exports.createPages = ({ graphql, boundActionCreators }) => {</span>\\n<span class=\\\"token inserted\\\">+  const { createPage } = boundActionCreators</span>\\n<span class=\\\"token inserted\\\">+  return new Promise((resolve, reject) => {</span>\\n<span class=\\\"token inserted\\\">+    graphql(`</span>\\n<span class=\\\"token inserted\\\">+      {</span>\\n<span class=\\\"token inserted\\\">+        allMarkdownRemark {</span>\\n<span class=\\\"token inserted\\\">+          edges {</span>\\n<span class=\\\"token inserted\\\">+            node {</span>\\n<span class=\\\"token inserted\\\">+              fields {</span>\\n<span class=\\\"token inserted\\\">+                slug</span>\\n<span class=\\\"token inserted\\\">+              }</span>\\n<span class=\\\"token inserted\\\">+            }</span>\\n<span class=\\\"token inserted\\\">+          }</span>\\n<span class=\\\"token inserted\\\">+        }</span>\\n<span class=\\\"token inserted\\\">+      }</span>\\n<span class=\\\"token inserted\\\">+    `).then(result => {</span>\\n<span class=\\\"token inserted\\\">+      result.data.allMarkdownRemark.edges.forEach(({ node }) => {</span>\\n<span class=\\\"token inserted\\\">+        createPage({</span>\\n<span class=\\\"token inserted\\\">+          path: node.fields.slug,</span>\\n<span class=\\\"token inserted\\\">+          component: path.resolve(`./src/templates/litlog-page.js`),</span>\\n<span class=\\\"token inserted\\\">+          context: {</span>\\n<span class=\\\"token inserted\\\">+            // Data passed to context is available in page queries as GraphQL variables.</span>\\n<span class=\\\"token inserted\\\">+            slug: node.fields.slug,</span>\\n<span class=\\\"token inserted\\\">+          },</span>\\n<span class=\\\"token inserted\\\">+        })</span>\\n<span class=\\\"token inserted\\\">+      })</span>\\n<span class=\\\"token inserted\\\">+      resolve()</span>\\n<span class=\\\"token inserted\\\">+    })</span>\\n<span class=\\\"token inserted\\\">+  })</span>\\n<span class=\\\"token inserted\\\">+};</span></code></pre>\\n      </div>\",\"frontmatter\":{\"title\":\"Update\"}}},\"pathContext\":{\"slug\":\"/sites/site-1/changes/files/gatsby-node.js.file/2018-06-26T1127/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---sites-site-1-changes-files-gatsby-node-js-file-2018-06-26-t-1127-9ead2e7d3ed3cc4ff6b2.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>following <a href=\\\"https://www.gatsbyjs.org/tutorial/part-seven/\\\">part-seven</a> of the [Gatsby.js Tutorial, except using <em>litlog-page.js</em> instead of <em>blog-post.js</em></p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"diff\\\">\\n      <pre class=\\\"language-diff\\\"><code class=\\\"language-diff\\\"><span class=\\\"token coord\\\">@@ -4,4 +4,48 @@</span>\\n  * See: https://www.gatsbyjs.org/docs/node-apis/\\n  */\\n \\n<span class=\\\"token deleted\\\">- // You can delete this file if you're not using it</span>\\n\\\\ No newline at end of file\\n<span class=\\\"token inserted\\\">+const path = require(`path`);</span>\\n<span class=\\\"token inserted\\\">+const { createFilePath } = require(`gatsby-source-filesystem`);</span>\\n<span class=\\\"token inserted\\\">+</span>\\n<span class=\\\"token inserted\\\">+exports.onCreateNode = ({ node, getNode, boundActionCreators }) => {</span>\\n<span class=\\\"token inserted\\\">+  const { createNodeField } = boundActionCreators</span>\\n<span class=\\\"token inserted\\\">+  if (node.internal.type === `MarkdownRemark`) {</span>\\n<span class=\\\"token inserted\\\">+    const slug = createFilePath({ node, getNode, basePath: `pages` })</span>\\n<span class=\\\"token inserted\\\">+    createNodeField({</span>\\n<span class=\\\"token inserted\\\">+      node,</span>\\n<span class=\\\"token inserted\\\">+      name: `slug`,</span>\\n<span class=\\\"token inserted\\\">+      value: `${slug}`,</span>\\n<span class=\\\"token inserted\\\">+    })</span>\\n<span class=\\\"token inserted\\\">+  }</span>\\n<span class=\\\"token inserted\\\">+};</span>\\n<span class=\\\"token inserted\\\">+</span>\\n<span class=\\\"token inserted\\\">+exports.createPages = ({ graphql, boundActionCreators }) => {</span>\\n<span class=\\\"token inserted\\\">+  const { createPage } = boundActionCreators</span>\\n<span class=\\\"token inserted\\\">+  return new Promise((resolve, reject) => {</span>\\n<span class=\\\"token inserted\\\">+    graphql(`</span>\\n<span class=\\\"token inserted\\\">+      {</span>\\n<span class=\\\"token inserted\\\">+        allMarkdownRemark {</span>\\n<span class=\\\"token inserted\\\">+          edges {</span>\\n<span class=\\\"token inserted\\\">+            node {</span>\\n<span class=\\\"token inserted\\\">+              fields {</span>\\n<span class=\\\"token inserted\\\">+                slug</span>\\n<span class=\\\"token inserted\\\">+              }</span>\\n<span class=\\\"token inserted\\\">+            }</span>\\n<span class=\\\"token inserted\\\">+          }</span>\\n<span class=\\\"token inserted\\\">+        }</span>\\n<span class=\\\"token inserted\\\">+      }</span>\\n<span class=\\\"token inserted\\\">+    `).then(result => {</span>\\n<span class=\\\"token inserted\\\">+      result.data.allMarkdownRemark.edges.forEach(({ node }) => {</span>\\n<span class=\\\"token inserted\\\">+        createPage({</span>\\n<span class=\\\"token inserted\\\">+          path: node.fields.slug,</span>\\n<span class=\\\"token inserted\\\">+          component: path.resolve(`./src/templates/litlog-page.js`),</span>\\n<span class=\\\"token inserted\\\">+          context: {</span>\\n<span class=\\\"token inserted\\\">+            // Data passed to context is available in page queries as GraphQL variables.</span>\\n<span class=\\\"token inserted\\\">+            slug: node.fields.slug,</span>\\n<span class=\\\"token inserted\\\">+          },</span>\\n<span class=\\\"token inserted\\\">+        })</span>\\n<span class=\\\"token inserted\\\">+      })</span>\\n<span class=\\\"token inserted\\\">+      resolve()</span>\\n<span class=\\\"token inserted\\\">+    })</span>\\n<span class=\\\"token inserted\\\">+  })</span>\\n<span class=\\\"token inserted\\\">+};</span></code></pre>\\n      </div>\",\"frontmatter\":{\"title\":\"Update\"}}},\"pathContext\":{\"slug\":\"/sites/site-1/changes/files/gatsby-node.js.file/2018-06-26T1127/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/sites-site-1-changes-files-gatsby-node-js-file-2018-06-26-t-1127.json\n// module id = 408\n// module chunks = 214944864858052"],"sourceRoot":""}